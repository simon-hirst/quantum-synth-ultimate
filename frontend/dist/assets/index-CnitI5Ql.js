(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const t of i)if(t.type==="childList")for(const a of t.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const t={};return i.integrity&&(t.integrity=i.integrity),i.referrerPolicy&&(t.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?t.credentials="include":i.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(i){if(i.ep)return;i.ep=!0;const t=e(i);fetch(i.href,t)}})();class g{constructor(s,e={}){var o,i;this.opts=e,this.gl=null,this.program=null,this.buffer=null,this.u={},this.textures=[],this.audioCtx=null,this.analyser=null,this.freq=null,this.stream=null,this.demo=!1,this.anim=null,this.frames=0,this.lastTick=performance.now(),this.vsrc=`
    attribute vec2 aPos;
    varying vec2 vUV;
    void main(){ vUV = aPos*0.5 + 0.5; gl_Position = vec4(aPos,0.0,1.0); }
  `,this.canvas=s,this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),window.addEventListener("orientationchange",()=>this.resizeCanvas()),this.gl=s.getContext("webgl2")||s.getContext("webgl"),this.gl||(this.paintFallback(),(i=(o=this.opts).onStatus)==null||i.call(o,"WebGL not supported"))}async start(){await this.loadServerShader(),this.loop()}stop(){this.anim&&cancelAnimationFrame(this.anim),this.anim=null}async startScreenShare(){var i;const s=await navigator.mediaDevices.getDisplayMedia({video:!0,audio:{echoCancellation:!1,noiseSuppression:!1}});if(!s.getAudioTracks().length)throw s.getTracks().forEach(t=>t.stop()),new Error("No audio shared");(i=this.audioCtx)==null||i.close().catch(()=>{}),this.audioCtx=new(window.AudioContext||window.webkitAudioContext),this.analyser=this.audioCtx.createAnalyser(),this.analyser.fftSize=512,this.audioCtx.createMediaStreamSource(s).connect(this.analyser),this.freq=new Uint8Array(this.analyser.frequencyBinCount),this.stream=s;const o=s.getVideoTracks()[0];o&&(o.onended=()=>this.stopScreenShare())}stopScreenShare(){var s;(s=this.stream)==null||s.getTracks().forEach(e=>e.stop()),this.stream=null,this.freq=null,this.audioCtx&&(this.audioCtx.close().catch(()=>{}),this.audioCtx=null),this.analyser=null}isSharing(){return!!this.stream}setDemoMode(s){this.demo=s,s&&this.stopScreenShare()}async loadServerShader(){var s,e,o,i,t,a;if(this.gl){(e=(s=this.opts).onStatus)==null||e.call(s,"Fetching shader…");try{const c=await fetch("/api/shader/next?ts="+Date.now(),{cache:"no-store"});if(!c.ok)throw new Error("fetch failed: "+c.status);const l=await c.json();await this.buildFromServer(l),(i=(o=this.opts).onStatus)==null||i.call(o,`Loaded: ${l.name}`)}catch{(a=(t=this.opts).onStatus)==null||a.call(t,"Backend unreachable; using local shader"),await this.buildLocal()}}}compile(s,e){const o=this.gl,i=o.createShader(s);if(o.shaderSource(i,e),o.compileShader(i),!o.getShaderParameter(i,o.COMPILE_STATUS)){const t=o.getShaderInfoLog(i);throw o.deleteShader(i),new Error("Shader compile error: "+t)}return i}async buildFromServer(s){const e=this.gl,o=this.compile(e.VERTEX_SHADER,this.vsrc),i=this.compile(e.FRAGMENT_SHADER,s.code),t=e.createProgram();if(e.attachShader(t,o),e.attachShader(t,i),e.linkProgram(t),!e.getProgramParameter(t,e.LINK_STATUS)){console.error("Program link error:",e.getProgramInfoLog(t)),await this.buildLocal();return}this.program=t,this.u={},this.textures=[];const a=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),c=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,c),e.bufferData(e.ARRAY_BUFFER,a,e.STATIC_DRAW),this.buffer=c,e.useProgram(this.program);const l=e.getAttribLocation(this.program,"aPos");e.enableVertexAttribArray(l),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0);for(const r of["uTime","uRes","uLevel","uBands","uFrame","uAtlasGrid","uAtlasFrames","uAtlasFPS"])this.u[r]=e.getUniformLocation(this.program,r);if(Array.isArray(s.textures)){let r=0;for(const n of s.textures){const h=e.createTexture();await this.uploadTexture(h,n.dataUrl,r,!0),this.textures.push({name:n.name,tex:h,unit:r,meta:n});const u=e.getUniformLocation(this.program,n.name);u&&e.uniform1i(u,r),r++,n.gridCols>0&&n.gridRows>0&&(this.u.uAtlasGrid&&e.uniform2f(this.u.uAtlasGrid,n.gridCols,n.gridRows),this.u.uAtlasFrames&&e.uniform1f(this.u.uAtlasFrames,n.frames??n.gridCols*n.gridRows),this.u.uAtlasFPS&&n.fps&&e.uniform1f(this.u.uAtlasFPS,n.fps))}}this.resizeCanvas()}async buildLocal(){const s=this.gl,e=this.vsrc,o=`
      precision mediump float; varying vec2 vUV;
      uniform float uTime; uniform float uLevel; uniform float uBands[4];
      void main(){
        float t = uTime*.6;
        vec3 col = vec3(
          .4 + .6*sin(t + (vUV.x+vUV.y)*18.0 + uBands[0]*4.0),
          .4 + .6*sin(t + (vUV.x-vUV.y)*22.0 + uBands[2]*5.0 + 2.1),
          .4 + .6*sin(t + (vUV.y)*20.0 + uBands[3]*6.0 + 4.2)
        ) * (0.5 + 1.5*uLevel);
        gl_FragColor = vec4(col,1.0);
      }`,i=this.compile(s.VERTEX_SHADER,e),t=this.compile(s.FRAGMENT_SHADER,o),a=s.createProgram();s.attachShader(a,i),s.attachShader(a,t),s.linkProgram(a),s.getProgramParameter(a,s.Link_STATUS),this.program=a,this.u={uTime:s.getUniformLocation(a,"uTime"),uLevel:s.getUniformLocation(a,"uLevel"),uBands:s.getUniformLocation(a,"uBands")};const c=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),l=s.createBuffer();s.bindBuffer(s.ARRAY_BUFFER,l),s.bufferData(s.ARRAY_BUFFER,c,s.STATIC_DRAW),this.buffer=l,s.useProgram(a);const r=s.getAttribLocation(a,"aPos");s.enableVertexAttribArray(r),s.vertexAttribPointer(r,2,s.FLOAT,!1,0,0),this.resizeCanvas()}async uploadTexture(s,e,o,i){const t=this.gl;await new Promise((a,c)=>{const l=new Image;l.onload=()=>{t.activeTexture(t.TEXTURE0+o),t.bindTexture(t.TEXTURE_2D,s),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,0),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,l),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR);const r=i?t.REPEAT:t.CLAMP_TO_EDGE;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,r),a()},l.onerror=()=>c(new Error("texture load failed")),l.src=e})}loop(){const s=e=>{this.render(e),this.anim=requestAnimationFrame(s)};this.anim=requestAnimationFrame(s)}render(s){var c,l;const e=this.gl;if(!e||!this.program)return;this.frames++,s-this.lastTick>=1e3&&((l=(c=this.opts).onFps)==null||l.call(c,this.frames),this.frames=0,this.lastTick=s);let i=0,t=[0,0,0,0];if(this.analyser&&this.freq){this.analyser.getByteFrequencyData(this.freq);const r=this.freq.length,n=(h,u)=>{let m=0;for(let f=h;f<u;f++)m+=this.freq[f];return m/((u-h)*255)};t[0]=n(0,r/8|0),t[1]=n(r/8|0,r/4|0),t[2]=n(r/4|0,r/2|0),t[3]=n(r/2|0,r),i=(t[0]+t[1]+t[2]+t[3])/4}else if(this.demo){const r=s/1e3;t=[(Math.sin(r*1.2)+1)/2,(Math.sin(r*1.7+1)+1)/2,(Math.sin(r*2.3+2)+1)/2,(Math.sin(r*2.9+3)+1)/2],i=(t[0]+t[1]+t[2]+t[3])/4}e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),this.u.uTime&&e.uniform1f(this.u.uTime,s/1e3),this.u.uRes&&e.uniform2f(this.u.uRes,this.canvas.width,this.canvas.height),this.u.uLevel&&e.uniform1f(this.u.uLevel,i),this.u.uBands&&e.uniform1fv(this.u.uBands,new Float32Array(t));const a=this.textures.find(r=>r.meta&&r.meta.gridCols&&r.meta.gridRows);if(a!=null&&a.meta){const r=a.meta.frames??a.meta.gridCols*a.meta.gridRows,n=a.meta.fps??24,h=Math.floor(s/1e3*n)%Math.max(1,r);this.u.uAtlasGrid&&e.uniform2f(this.u.uAtlasGrid,a.meta.gridCols,a.meta.gridRows),this.u.uAtlasFrames&&e.uniform1f(this.u.uAtlasFrames,r),this.u.uAtlasFPS&&e.uniform1f(this.u.uAtlasFPS,n),this.u.uFrame&&e.uniform1f(this.u.uFrame,h)}for(const r of this.textures)e.activeTexture(e.TEXTURE0+r.unit),e.bindTexture(e.TEXTURE_2D,r.tex);e.drawArrays(e.TRIANGLES,0,6)}paintFallback(){const s=this.canvas.getContext("2d");if(!s)return;const e=this.canvas.clientWidth,o=this.canvas.clientHeight,i=s.createLinearGradient(0,0,e,o);i.addColorStop(0,"#0b1020"),i.addColorStop(1,"#000"),s.fillStyle=i,s.fillRect(0,0,e,o),s.fillStyle="#9efcff",s.font="14px system-ui, -apple-system, Segoe UI, Roboto",s.fillText("WebGL unavailable — using fallback",16,28)}resizeCanvas(){var a;const e=(this.canvas.parentElement??document.body).getBoundingClientRect(),o=Math.max(1,Math.floor(e.width)),i=Math.max(1,Math.floor(e.height||0||420)),t=Math.max(1,Math.round(window.devicePixelRatio||1));this.canvas.style.width=`${o}px`,this.canvas.style.height=`${i}px`,(this.canvas.width!==o*t||this.canvas.height!==i*t)&&(this.canvas.width=o*t,this.canvas.height=i*t),(a=this.gl)==null||a.viewport(0,0,this.canvas.width,this.canvas.height)}}document.addEventListener("DOMContentLoaded",async()=>{const d=document.querySelector("#app");if(!d)return;d.innerHTML=`
    <div class="qs-shell">
      <aside class="qs-panel glass">
        <h1 class="qs-title">QuantumSynth</h1>
        <p class="qs-sub">Neural Edition</p>
        <div class="qs-divider"></div>

        <div class="qs-kv">
          <div id="status" class="qs-status">Ready</div>
          <div id="fps" class="qs-fps">FPS: 0</div>
        </div>

        <div class="qs-actions">
          <button id="btnShare" class="btn btn-primary">Start Screen Sharing</button>
          <button id="btnDemo" class="btn btn-ghost">Demo Mode</button>
        </div>

        <h2 class="qs-h2">Setup</h2>
        <ol class="qs-list">
          <li>Use Chrome or Edge for best results</li>
          <li>When prompted, tick <b>“Share audio”</b></li>
          <li>Select the tab/window you want visualised</li>
          <li>Press <b>N</b> to load next server shader</li>
        </ol>

        <div class="qs-footer">
          built by <a href="https://github.com/simon-hirst" target="_blank" rel="noopener">https://github.com/simon-hirst</a>
        </div>
      </aside>

      <main class="qs-stage">
        <canvas id="visualizer" class="qs-canvas"></canvas>
      </main>
    </div>
  `;const s=document.getElementById("visualizer"),e=document.getElementById("status"),o=document.getElementById("fps"),i=document.getElementById("btnShare"),t=document.getElementById("btnDemo");if(!s)return;const a=new g(s,{onStatus:r=>{e.textContent=r},onFps:r=>{o.textContent=`FPS: ${r}`}});await a.start();const c=()=>{i.textContent=a.isSharing()?"Stop Screen Sharing":"Start Screen Sharing"};c(),i.addEventListener("click",async()=>{if(a.isSharing()){a.stopScreenShare(),e.textContent="Screen share stopped",c();return}i.disabled=!0,e.textContent='Requesting screen share (enable "Share audio")…';try{await a.startScreenShare(),e.textContent="Screen sharing active"}catch{e.textContent="Permission denied or no audio shared"}finally{i.disabled=!1,c()}});let l=!1;t.addEventListener("click",()=>{l=!l,a.setDemoMode(l),t.textContent=l?"Stop Demo":"Demo Mode",e.textContent=l?"Demo mode active":"Ready"}),document.addEventListener("keydown",r=>{var n;r.key.toLowerCase()==="n"&&((n=a.loadServerShader)==null||n.call(a))})});
