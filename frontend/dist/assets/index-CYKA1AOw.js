(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function r(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(t){if(t.ep)return;t.ep=!0;const n=r(t);fetch(t.href,n)}})();class c{constructor(e){this.canvas=e;const r=e.getContext("2d");if(!r)throw new Error("Could not get canvas context");this.ctx=r,this.setupCanvas(),this.startPolling()}setupCanvas(){const e=this.canvas.parentElement;if(!e)return;const r=e.clientWidth,s=e.clientHeight;this.canvas.width=r,this.canvas.height=s,this.canvas.style.width=`${r}px`,this.canvas.style.height=`${s}px`}}document.addEventListener("DOMContentLoaded",()=>{console.log("Initializing QuantumSynth...");const i=document.querySelector("#app");if(!i)return;i.innerHTML=`
    <div class="quantum-container">
      <!-- Your UI structure here -->
      <canvas id="visualizer"></canvas>
    </div>
  `;const e=document.getElementById("visualizer");e&&new c(e)});
