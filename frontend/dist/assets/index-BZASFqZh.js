(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();class x{constructor(e,t={}){var r,i;this.opts=t,this.gl=null,this.program=null,this.buffer=null,this.u={},this.textures=[],this.ws=null,this.streamTex=null,this.streamUnit=5,this.streamW=1,this.streamH=1,this.audioCtx=null,this.analyser=null,this.freq=null,this.stream=null,this.env=0,this.envAttack=.25,this.envRelease=.05,this.lastEnergy=0,this.beat=0,this.beatCooldown=0,this.demo=!1,this.anim=null,this.frames=0,this.lastTick=performance.now(),this.vsrc=`
    attribute vec2 aPos;
    varying vec2 vUV;
    void main(){ vUV = aPos*0.5 + 0.5; gl_Position = vec4(aPos,0.0,1.0); }
  `,this.canvas=e,this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),window.addEventListener("orientationchange",()=>this.resizeCanvas()),this.gl=e.getContext("webgl")||e.getContext("webgl2"),this.gl||(this.paintFallback(),(i=(r=this.opts).onStatus)==null||i.call(r,"WebGL not supported")),this.gl&&this.initDefaultStreamTexture()}async start(){await this.loadServerShader("composite"),this.connectStream(),this.loop()}stop(){var e;this.anim&&cancelAnimationFrame(this.anim),this.anim=null,(e=this.ws)==null||e.close()}async startScreenShare(){var i;const e=await navigator.mediaDevices.getDisplayMedia({video:!0,audio:{echoCancellation:!1,noiseSuppression:!1}});if(!e.getAudioTracks().length)throw e.getTracks().forEach(s=>s.stop()),new Error("No audio shared");(i=this.audioCtx)==null||i.close().catch(()=>{}),this.audioCtx=new(window.AudioContext||window.webkitAudioContext),this.analyser=this.audioCtx.createAnalyser(),this.analyser.fftSize=1024,this.audioCtx.createMediaStreamSource(e).connect(this.analyser),this.freq=new Uint8Array(this.analyser.frequencyBinCount),this.stream=e;const r=e.getVideoTracks()[0];r&&(r.onended=()=>this.stopScreenShare())}stopScreenShare(){var e;(e=this.stream)==null||e.getTracks().forEach(t=>t.stop()),this.stream=null,this.freq=null,this.audioCtx&&(this.audioCtx.close().catch(()=>{}),this.audioCtx=null),this.analyser=null}isSharing(){return!!this.stream}setDemoMode(e){this.demo=e,e&&this.stopScreenShare()}async loadServerShader(e){var i,s,a,c,h,l;if(!this.gl)return;(s=(i=this.opts).onStatus)==null||s.call(i,"Fetching shader…");const t=new URLSearchParams;e&&t.set("type",e),t.set("ts",Date.now().toString());const r="/api/shader/next?"+t.toString();try{const u=await fetch(r,{cache:"no-store"});if(!u.ok)throw new Error(`HTTP ${u.status}`);const o=await u.json();await this.buildFromServer(o),(c=(a=this.opts).onStatus)==null||c.call(a,`Loaded: ${o.name}`)}catch(u){if(console.error("[ShaderLoad] Failed for",r,u),e==="composite")try{await this.loadServerShader("grayscott");return}catch{}(l=(h=this.opts).onStatus)==null||l.call(h,"Server shader failed; using local shader"),await this.buildLocal()}}compile(e,t){const r=this.gl,i=r.createShader(e);if(r.shaderSource(i,t),r.compileShader(i),!r.getShaderParameter(i,r.COMPILE_STATUS)){const s=r.getShaderInfoLog(i);throw r.deleteShader(i),new Error("Shader compile error: "+s)}return i}async buildFromServer(e){const t=this.gl,r=this.compile(t.VERTEX_SHADER,this.vsrc),i=this.compile(t.FRAGMENT_SHADER,e.code),s=t.createProgram();if(t.attachShader(s,r),t.attachShader(s,i),t.linkProgram(s),!t.getProgramParameter(s,t.LINK_STATUS)){const o=t.getProgramInfoLog(s)+"";throw console.error("[ShaderLink] ",o),new Error("Program link error: "+o)}this.program=s,this.u={},this.textures=[];const a=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),c=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,a,t.STATIC_DRAW),this.buffer=c,t.useProgram(this.program);const h=t.getAttribLocation(this.program,"aPos");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,2,t.FLOAT,!1,0,0);for(const o of["uTime","uRes","uLevel","uBands","uPulse","uBeat","uBlendFlow","uBlendRD","uBlendStream","uFrame","uAtlasGrid","uAtlasFrames","uAtlasFPS","uStreamRes"])this.u[o]=t.getUniformLocation(this.program,o);let l=0;if(Array.isArray(e.textures))for(const o of e.textures){const n=t.createTexture();await this.uploadTexture(n,o.dataUrl,l,!0),this.textures.push({name:o.name,tex:n,unit:l,meta:o});const m=t.getUniformLocation(this.program,o.name);m&&t.uniform1i(m,l),l++,o.gridCols&&o.gridRows&&(this.u.uAtlasGrid&&t.uniform2f(this.u.uAtlasGrid,o.gridCols,o.gridRows),this.u.uAtlasFrames&&t.uniform1f(this.u.uAtlasFrames,o.frames??o.gridCols*o.gridRows),this.u.uAtlasFPS&&t.uniform1f(this.u.uAtlasFPS,o.fps??24))}const u=t.getUniformLocation(this.program,"uStreamTex");u&&t.uniform1i(u,this.streamUnit),this.u.uStreamRes&&t.uniform2f(this.u.uStreamRes,this.streamW,this.streamH),this.resizeCanvas()}async buildLocal(){const e=this.gl,t=this.compile(e.VERTEX_SHADER,this.vsrc),r=this.compile(e.FRAGMENT_SHADER,`
      precision mediump float; varying vec2 vUV; uniform float uTime, uLevel;
      void main(){ float t=uTime*.6;
        vec3 col=vec3(.4+.6*sin(t+(vUV.x+vUV.y)*18.0),
                      .4+.6*sin(t+(vUV.x-vUV.y)*22.0+2.1),
                      .4+.6*sin(t+vUV.y*20.0+4.2))*(.5+1.5*uLevel);
        gl_FragColor=vec4(col,1.0);
      }`),i=e.createProgram();if(e.attachShader(i,t),e.attachShader(i,r),e.linkProgram(i),!e.getProgramParameter(i,e.LINK_STATUS)){console.error("Link error:",e.getProgramInfoLog(i)),this.paintFallback();return}this.program=i,this.u={uTime:e.getUniformLocation(i,"uTime"),uLevel:e.getUniformLocation(i,"uLevel")};const s=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),a=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,s,e.STATIC_DRAW),this.buffer=a,e.useProgram(i);const c=e.getAttribLocation(i,"aPos");e.enableVertexAttribArray(c),e.vertexAttribPointer(c,2,e.FLOAT,!1,0,0),this.resizeCanvas()}async uploadTexture(e,t,r,i){const s=this.gl;await new Promise((a,c)=>{const h=new Image;h.onload=()=>{s.activeTexture(s.TEXTURE0+r),s.bindTexture(s.TEXTURE_2D,e),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,0),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,h),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.LINEAR),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.LINEAR);const l=i?s.REPEAT:s.CLAMP_TO_EDGE;s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,l),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,l),a()},h.onerror=()=>c(new Error("texture load failed")),h.src=t})}initDefaultStreamTexture(){const e=this.gl;this.streamTex=e.createTexture(),this.streamW=1,this.streamH=1,e.activeTexture(e.TEXTURE0+this.streamUnit),e.bindTexture(e.TEXTURE_2D,this.streamTex);const t=new Uint8Array([0,0,0,255]);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT)}connectStream(){var t;const e=location.protocol==="https:"?"wss:":"ws:";(t=this.ws)==null||t.close(),this.ws=new WebSocket(`${e}//${location.host}/ws`),this.ws.binaryType="arraybuffer",this.ws.onopen=()=>{var r,i,s;(i=(r=this.opts).onStatus)==null||i.call(r,"WS connected (stream)…"),(s=this.ws)==null||s.send(JSON.stringify({type:"subscribe",field:"waves",w:256,h:256,fps:24}))},this.ws.onmessage=r=>{typeof r.data!="string"&&this.onStreamFrame(r.data)},this.ws.onerror=r=>{var i,s;console.error("WS error",r),(s=(i=this.opts).onStatus)==null||s.call(i,"WS error")},this.ws.onclose=()=>{var r,i;return(i=(r=this.opts).onStatus)==null?void 0:i.call(r,"WS disconnected")}}onStreamFrame(e){const t=this.gl;if(!t||!this.program)return;const r=new DataView(e,0,24);if(!String.fromCharCode(...new Uint8Array(e.slice(0,8))).startsWith("FRAMEv1"))return;const s=r.getUint32(8,!0),a=r.getUint32(12,!0);if(r.getUint32(16,!0)!==4)return;const h=new Uint8Array(e,24);if(!this.streamTex||this.streamW!==s||this.streamH!==a){this.streamTex=t.createTexture(),this.streamW=s,this.streamH=a;const l=t.getUniformLocation(this.program,"uStreamTex");l&&t.uniform1i(l,this.streamUnit),this.u.uStreamRes&&t.uniform2f(this.u.uStreamRes,s,a)}t.activeTexture(t.TEXTURE0+this.streamUnit),t.bindTexture(t.TEXTURE_2D,this.streamTex),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,0),this.streamW===s&&this.streamH===a&&h.length===s*a*4&&(t.getTexParameter(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER)?t.texSubImage2D(t.TEXTURE_2D,0,0,0,s,a,t.RGBA,t.UNSIGNED_BYTE,h):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,s,a,0,t.RGBA,t.UNSIGNED_BYTE,h)),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.REPEAT)}loop(){const e=t=>{this.render(t),this.anim=requestAnimationFrame(e)};this.anim=requestAnimationFrame(e)}render(e){var u,o;const t=this.gl;if(!t||!this.program)return;this.frames++,e-this.lastTick>=1e3&&((o=(u=this.opts).onFps)==null||o.call(u,this.frames),this.frames=0,this.lastTick=e);let i=0,s=[0,0,0,0];if(this.analyser&&this.freq){this.analyser.getByteFrequencyData(this.freq);const n=this.freq.length;let m=0;for(let d=0;d<n;d++){const T=this.freq[d]/255;m+=T*T}const f=Math.sqrt(m/n);f>this.env?this.env+=(f-this.env)*this.envAttack:this.env+=(f-this.env)*this.envRelease;const S=this.env,v=S-this.lastEnergy;this.lastEnergy=S,this.beat=Math.max(0,this.beat-.12),v>.08&&this.beatCooldown<=0&&(this.beat=1,this.beatCooldown=8),this.beatCooldown>0&&this.beatCooldown--;const E=(d,T)=>{let p=0;for(let R=d;R<T;R++)p+=this.freq[R];return p/((T-d)*255)};s[0]=E(0,n/8|0),s[1]=E(n/8|0,n/4|0),s[2]=E(n/4|0,n/2|0),s[3]=E(n/2|0,n),i=S}else if(this.demo){const n=e/1e3;s=[(Math.sin(n*1.2)+1)/2,(Math.sin(n*1.7+1)+1)/2,(Math.sin(n*2.3+2)+1)/2,(Math.sin(n*2.9+3)+1)/2],i=(s[0]+s[1]+s[2]+s[3])/4,this.beat=Math.max(0,this.beat-.05),Math.sin(n*2.5)>.995&&(this.beat=1),this.beat>0&&(this.beat-=.06)}t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT),this.u.uTime&&t.uniform1f(this.u.uTime,e/1e3),this.u.uRes&&t.uniform2f(this.u.uRes,this.canvas.width,this.canvas.height),this.u.uLevel&&t.uniform1f(this.u.uLevel,i),this.u.uBands&&t.uniform1fv(this.u.uBands,new Float32Array(s)),this.u.uPulse&&t.uniform1f(this.u.uPulse,Math.max(0,this.env-.5)*2),this.u.uBeat&&t.uniform1f(this.u.uBeat,this.beat);const a=this.textures.find(n=>n.meta&&n.meta.gridCols&&n.meta.gridRows);if(a!=null&&a.meta){const n=a.meta.frames??a.meta.gridCols*a.meta.gridRows,m=a.meta.fps??24,f=Math.floor(e/1e3*m)%Math.max(1,n);this.u.uAtlasGrid&&t.uniform2f(this.u.uAtlasGrid,a.meta.gridCols,a.meta.gridRows),this.u.uAtlasFrames&&t.uniform1f(this.u.uAtlasFrames,n),this.u.uAtlasFPS&&t.uniform1f(this.u.uAtlasFPS,m),this.u.uFrame&&t.uniform1f(this.u.uFrame,f)}const c=.4*(1-Math.min(1,i*1.2))+.15*s[0],h=.4+.6*s[2],l=Math.min(1,.2+1.8*i)+this.beat*.4;this.u.uBlendFlow&&t.uniform1f(this.u.uBlendFlow,c),this.u.uBlendRD&&t.uniform1f(this.u.uBlendRD,h),this.u.uBlendStream&&t.uniform1f(this.u.uBlendStream,l);for(const n of this.textures)t.activeTexture(t.TEXTURE0+n.unit),t.bindTexture(t.TEXTURE_2D,n.tex);t.activeTexture(t.TEXTURE0+this.streamUnit),t.bindTexture(t.TEXTURE_2D,this.streamTex),t.drawArrays(t.TRIANGLES,0,6)}paintFallback(){const e=this.canvas.getContext("2d");if(!e)return;const t=this.canvas.clientWidth,r=this.canvas.clientHeight,i=e.createLinearGradient(0,0,t,r);i.addColorStop(0,"#0b1020"),i.addColorStop(1,"#000"),e.fillStyle=i,e.fillRect(0,0,t,r),e.fillStyle="#9efcff",e.font="14px system-ui,-apple-system,Segoe UI,Roboto",e.fillText("WebGL unavailable — using fallback",16,28)}resizeCanvas(){var a;const t=(this.canvas.parentElement??document.body).getBoundingClientRect(),r=Math.max(1,Math.floor(t.width)),i=Math.max(1,Math.floor(t.height||0||420)),s=Math.max(1,Math.round(window.devicePixelRatio||1));this.canvas.style.width=`${r}px`,this.canvas.style.height=`${i}px`,(this.canvas.width!==r*s||this.canvas.height!==i*s)&&(this.canvas.width=r*s,this.canvas.height=i*s),(a=this.gl)==null||a.viewport(0,0,this.canvas.width,this.canvas.height)}}document.addEventListener("DOMContentLoaded",async()=>{const g=document.querySelector("#app");if(!g)return;g.innerHTML=`
    <div class="qs-shell">
      <aside class="qs-panel glass">
        <h1 class="qs-title">QuantumSynth</h1>
        <p class="qs-sub">Neural Edition</p>
        <div class="qs-divider"></div>

        <div class="qs-kv">
          <div id="status" class="qs-status">Ready</div>
          <div id="fps" class="qs-fps">FPS: 0</div>
        </div>

        <div class="qs-actions">
          <button id="btnShare" class="btn btn-primary">Start Screen Sharing</button>
          <button id="btnDemo" class="btn btn-ghost">Demo Mode</button>
        </div>

        <h2 class="qs-h2">Setup</h2>
        <ol class="qs-list">
          <li>Use Chrome or Edge for best results</li>
          <li>When prompted, tick <b>“Share audio”</b></li>
          <li>Select the tab/window you want visualised</li>
          <li>Press <b>N</b> to load next server shader</li>
        </ol>

        <div class="qs-footer">
          built by <a href="https://github.com/simon-hirst" target="_blank" rel="noopener">https://github.com/simon-hirst</a>
        </div>
      </aside>

      <main class="qs-stage">
        <canvas id="visualizer" class="qs-canvas"></canvas>
      </main>
    </div>
  `;const e=document.getElementById("visualizer"),t=document.getElementById("status"),r=document.getElementById("fps"),i=document.getElementById("btnShare"),s=document.getElementById("btnDemo");if(!e)return;const a=new x(e,{onStatus:l=>{t.textContent=l},onFps:l=>{r.textContent=`FPS: ${l}`}});await a.start();const c=()=>{i.textContent=a.isSharing()?"Stop Screen Sharing":"Start Screen Sharing"};c(),i.addEventListener("click",async()=>{if(a.isSharing()){a.stopScreenShare(),t.textContent="Screen share stopped",c();return}i.disabled=!0,t.textContent='Requesting screen share (enable "Share audio")…';try{await a.startScreenShare(),t.textContent="Screen sharing active"}catch{t.textContent="Permission denied or no audio shared"}finally{i.disabled=!1,c()}});let h=!1;s.addEventListener("click",()=>{h=!h,a.setDemoMode(h),s.textContent=h?"Stop Demo":"Demo Mode",t.textContent=h?"Demo mode active":"Ready"}),document.addEventListener("keydown",l=>{var u;l.key.toLowerCase()==="n"&&((u=a.loadServerShader)==null||u.call(a))})});
