(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const s of e.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function n(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function a(t){if(t.ep)return;t.ep=!0;const e=n(t);fetch(t.href,e)}})();class d{constructor(i){this.audioContext=null,this.analyser=null,this.dataArray=null,this.animationFrame=null,this.canvas=i,this.ctx=i.getContext("2d"),this.setupCanvas()}setupCanvas(){this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight}initialize(i){console.log("Initializing audio processing...");try{this.audioContext=new AudioContext;const n=this.audioContext.createMediaStreamSource(i);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=256,n.connect(this.analyser),this.dataArray=new Uint8Array(this.analyser.frequencyBinCount),this.visualize()}catch(n){console.error("Error initializing audio:",n)}}visualize(){if(!this.analyser||!this.dataArray)return;this.analyser.getByteFrequencyData(this.dataArray),this.ctx.fillStyle="rgba(0, 0, 0, 0.1)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);const i=this.canvas.width/this.dataArray.length*2;let n,a=0;for(let t=0;t<this.dataArray.length;t++){n=this.dataArray[t]/2;const e=this.ctx.createLinearGradient(0,0,0,this.canvas.height);e.addColorStop(0,"#00b4db"),e.addColorStop(1,"#0083b0"),this.ctx.fillStyle=e,this.ctx.fillRect(a,this.canvas.height-n,i,n),a+=i+1}this.animationFrame=requestAnimationFrame(()=>this.visualize())}stop(){this.animationFrame&&cancelAnimationFrame(this.animationFrame),this.audioContext&&this.audioContext.close()}}document.addEventListener("DOMContentLoaded",()=>{console.log("Initializing QuantumSynth...");const o=document.querySelector("#app");o.innerHTML=`
    <div class="container">
      <h1>QuantumSynth Neural Edition</h1>
      <div class="instructions">
        <h2>Setup Instructions:</h2>
        <ol>
          <li>Click "Start Screen Sharing" below</li>
          <li>Select your entire screen</li>
          <li>Check "Share audio" option</li>
          <li>Click "Share"</li>
        </ol>
        <button id="startButton">Start Screen Sharing</button>
        <button id="stopButton" style="display: none; background: #ff4757;">Stop Sharing</button>
      </div>
      <canvas id="visualizer"></canvas>
    </div>
  `;const i=document.getElementById("visualizer"),n=new d(i);let a=null;const t=document.getElementById("startButton"),e=document.getElementById("stopButton");t.addEventListener("click",s),e.addEventListener("click",l);function s(){t.disabled=!0,t.textContent="Starting...",navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia?navigator.mediaDevices.getDisplayMedia({video:!0,audio:!0}).then(r=>{console.log("Screen sharing started"),a=r,t.style.display="none",e.style.display="block",n.initialize(r);const c=r.getVideoTracks()[0];c&&(c.onended=l)}).catch(r=>{console.error("Error starting screen share:",r),t.disabled=!1,t.textContent="Try Again"}):(alert("Screen sharing not supported in this browser"),t.disabled=!1,t.textContent="Start Screen Sharing")}function l(){a&&(a.getTracks().forEach(r=>r.stop()),a=null),n.stop(),e.style.display="none",t.style.display="block",t.disabled=!1,t.textContent="Start Screen Sharing"}});
