(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const c of e.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function n(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(t){if(t.ep)return;t.ep=!0;const e=n(t);fetch(t.href,e)}})();class a{constructor(s){this.resizeObserver=null,this.render=()=>{const i=this.canvas.clientWidth,t=this.canvas.clientHeight;this.ctx.clearRect(0,0,i,t),this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,i,t),this.ctx.fillStyle="#0ff",this.ctx.fillRect(16,16,Math.max(80,i*.2),8),requestAnimationFrame(this.render)},this.canvas=s;const n=s.getContext("2d");if(!n)throw new Error("Could not get canvas context");this.ctx=n,this.setupCanvas(),this.attachResize(),this.render()}setupCanvas(){const n=(this.canvas.parentElement??document.body).getBoundingClientRect(),i=Math.max(1,Math.floor(n.width)),t=Math.max(1,Math.floor(n.height||0||400)),e=Math.max(1,Math.round(window.devicePixelRatio||1));(this.canvas.width!==i*e||this.canvas.height!==t*e)&&(this.canvas.style.width=`${i}px`,this.canvas.style.height=`${t}px`,this.canvas.width=i*e,this.canvas.height=t*e),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.scale(e,e)}attachResize(){try{const s=this.canvas.parentElement??document.body,n=new ResizeObserver(()=>this.setupCanvas());n.observe(s),this.resizeObserver=n}catch{window.addEventListener("resize",()=>this.setupCanvas()),window.addEventListener("orientationchange",()=>this.setupCanvas())}}}document.addEventListener("DOMContentLoaded",()=>{const r=document.querySelector("#app");if(!r)return;r.innerHTML=`
    <div class="quantum-container">
      <canvas id="visualizer"></canvas>
    </div>
  `;const s=document.getElementById("visualizer");s&&new a(s)});
